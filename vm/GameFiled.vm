function GameFiled.new 0
push constant 5
call Memory.alloc 1
pop pointer 0
push constant 0
pop this 0
push argument 0
pop this 3
push constant 0
pop this 4
push constant 6
call String.new 1
push constant 83
call String.appendChar 2
push constant 99
call String.appendChar 2
push constant 111
call String.appendChar 2
push constant 114
call String.appendChar 2
push constant 101
call String.appendChar 2
push constant 58
call String.appendChar 2
pop static 4
push constant 136
pop static 0
push constant 8
pop static 1
push constant 136
push constant 240
add
pop static 2
push constant 8
push constant 240
add
pop static 3
push pointer 0
push constant 0
call GameFiled.InitializationArrayOfArray 2
pop this 2
push pointer 0
push constant 1
call GameFiled.InitializationArrayOfArray 2
pop this 1
push constant 0
not
call Screen.setColor 1
pop temp 0
push pointer 0
call GameFiled.draw 1
pop temp 0
push pointer 0
push constant 0
call GameFiled.setScore 2
pop temp 0
push pointer 0
return
function GameFiled.dispose 2
push argument 0
pop pointer 0
push constant 0
pop local 0
label WHILE_EXP0
push local 0
push this 3
lt
not
if-goto WHILE_END0
push local 0
push this 2
add
pop pointer 1
push that 0
pop local 1
push local 1
call Array.dispose 1
pop temp 0
push local 0
push constant 1
add
pop local 0
goto WHILE_EXP0
label WHILE_END0
push this 2
call Array.dispose 1
pop temp 0
push static 4
call String.dispose 1
pop temp 0
push pointer 0
call Memory.deAlloc 1
pop temp 0
push constant 0
return
function GameFiled.getWin 0
push argument 0
pop pointer 0
push this 4
return
function GameFiled.getSize 0
push argument 0
pop pointer 0
push this 3
return
function GameFiled.getScore 0
push argument 0
pop pointer 0
push this 0
return
function GameFiled.setScore 0
push argument 0
pop pointer 0
push this 0
push argument 1
add
pop this 0
push constant 1
push constant 1
call Output.moveCursor 2
pop temp 0
push static 4
call Output.printString 1
pop temp 0
push this 0
call Output.printInt 1
pop temp 0
push constant 0
return
function GameFiled.draw 4
push argument 0
pop pointer 0
push constant 240
push this 3
call Math.divide 2
pop local 0
push constant 0
pop local 1
label WHILE_EXP0
push local 1
push this 3
push constant 1
add
lt
not
if-goto WHILE_END0
push static 0
push local 1
push local 0
call Math.multiply 2
add
push static 1
push static 0
push local 1
push local 0
call Math.multiply 2
add
push static 3
call Screen.drawLine 4
pop temp 0
push local 1
push constant 1
add
pop local 1
goto WHILE_EXP0
label WHILE_END0
push constant 0
pop local 2
label WHILE_EXP1
push local 2
push this 3
push constant 1
add
lt
not
if-goto WHILE_END1
push static 0
push static 1
push local 2
push local 0
call Math.multiply 2
add
push static 2
push static 1
push local 2
push local 0
call Math.multiply 2
add
call Screen.drawLine 4
pop temp 0
push local 2
push constant 1
add
pop local 2
goto WHILE_EXP1
label WHILE_END1
push constant 0
push this 2
add
pop pointer 1
push that 0
pop local 3
push constant 4
push static 0
push constant 5
add
push static 1
push constant 5
add
push this 3
call DrawerNum.drawNum 4
pop temp 0
push constant 0
push local 3
add
push constant 4
pop temp 0
pop pointer 1
push temp 0
pop that 0
push pointer 0
push constant 4
call GameFiled.setScore 2
pop temp 0
push constant 2
push static 0
push constant 5
add
push local 0
add
push static 1
push constant 5
add
push this 3
call DrawerNum.drawNum 4
pop temp 0
push constant 1
push local 3
add
push constant 2
pop temp 0
pop pointer 1
push temp 0
pop that 0
push pointer 0
push constant 2
call GameFiled.setScore 2
pop temp 0
push constant 0
return
function GameFiled.InitializationArrayOfArray 4
push argument 0
pop pointer 0
push this 3
call Array.new 1
pop local 3
push constant 0
pop local 0
push constant 0
pop local 1
label WHILE_EXP0
push local 0
push this 3
lt
not
if-goto WHILE_END0
push local 0
push local 3
add
push this 3
call Array.new 1
pop temp 0
pop pointer 1
push temp 0
pop that 0
push local 0
push local 3
add
pop pointer 1
push that 0
pop local 2
label WHILE_EXP1
push local 1
push this 3
lt
not
if-goto WHILE_END1
push local 1
push local 2
add
push argument 1
pop temp 0
pop pointer 1
push temp 0
pop that 0
push local 1
push constant 1
add
pop local 1
goto WHILE_EXP1
label WHILE_END1
push constant 0
pop local 1
push local 0
push constant 1
add
pop local 0
goto WHILE_EXP0
label WHILE_END0
push local 3
return
function GameFiled.FillArrayOfArray 3
push argument 0
pop pointer 0
push constant 0
pop local 0
push constant 0
pop local 1
label WHILE_EXP0
push local 0
push this 3
lt
not
if-goto WHILE_END0
push local 0
push argument 1
add
pop pointer 1
push that 0
pop local 2
label WHILE_EXP1
push local 1
push this 3
lt
not
if-goto WHILE_END1
push local 1
push local 2
add
push argument 2
pop temp 0
pop pointer 1
push temp 0
pop that 0
push local 1
push constant 1
add
pop local 1
goto WHILE_EXP1
label WHILE_END1
push constant 0
pop local 1
push local 0
push constant 1
add
pop local 0
goto WHILE_EXP0
label WHILE_END0
push argument 1
return
function GameFiled.moveRight 6
push argument 0
pop pointer 0
push constant 0
pop local 5
push pointer 0
push this 1
push constant 0
not
call GameFiled.FillArrayOfArray 3
pop temp 0
push this 3
push constant 1
sub
pop local 4
label WHILE_EXP0
push local 4
push constant 0
gt
not
if-goto WHILE_END0
push constant 0
pop local 2
push this 3
push constant 1
sub
pop local 3
label WHILE_EXP1
push local 2
push this 3
lt
not
if-goto WHILE_END1
push local 2
push this 2
add
pop pointer 1
push that 0
pop local 0
push local 2
push this 1
add
pop pointer 1
push that 0
pop local 1
label WHILE_EXP2
push local 3
push constant 0
gt
not
if-goto WHILE_END2
push local 3
push local 0
add
pop pointer 1
push that 0
push local 3
push constant 1
sub
push local 0
add
pop pointer 1
push that 0
eq
push local 3
push local 0
add
pop pointer 1
push that 0
push constant 0
eq
not
and
push local 3
push local 1
add
pop pointer 1
push that 0
and
push local 3
push constant 1
sub
push local 1
add
pop pointer 1
push that 0
and
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push constant 0
call Screen.setColor 1
pop temp 0
push local 3
push local 0
add
pop pointer 1
push that 0
push static 0
push static 2
push static 0
sub
push this 3
call Math.divide 2
push local 3
call Math.multiply 2
add
push constant 5
add
push static 1
push static 2
push static 0
sub
push this 3
call Math.divide 2
push local 2
call Math.multiply 2
add
push constant 5
add
push this 3
call DrawerNum.drawNum 4
pop temp 0
push local 3
push constant 1
sub
push local 0
add
pop pointer 1
push that 0
push static 0
push static 2
push static 0
sub
push this 3
call Math.divide 2
push local 3
push constant 1
sub
call Math.multiply 2
add
push constant 5
add
push static 1
push static 2
push static 0
sub
push this 3
call Math.divide 2
push local 2
call Math.multiply 2
add
push constant 5
add
push this 3
call DrawerNum.drawNum 4
pop temp 0
push local 3
push local 0
add
push local 3
push local 0
add
pop pointer 1
push that 0
push local 3
push constant 1
sub
push local 0
add
pop pointer 1
push that 0
add
pop temp 0
pop pointer 1
push temp 0
pop that 0
push local 3
push local 0
add
pop pointer 1
push that 0
push constant 2048
eq
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push constant 0
not
pop this 4
label IF_FALSE1
push constant 0
not
pop local 5
push local 3
push local 1
add
push constant 0
pop temp 0
pop pointer 1
push temp 0
pop that 0
push local 3
push constant 1
sub
push local 0
add
push constant 0
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 0
not
call Screen.setColor 1
pop temp 0
push local 3
push local 0
add
pop pointer 1
push that 0
push static 0
push static 2
push static 0
sub
push this 3
call Math.divide 2
push local 3
call Math.multiply 2
add
push constant 5
add
push static 1
push static 2
push static 0
sub
push this 3
call Math.divide 2
push local 2
call Math.multiply 2
add
push constant 5
add
push this 3
call DrawerNum.drawNum 4
pop temp 0
label IF_FALSE0
push local 3
push local 0
add
pop pointer 1
push that 0
push constant 0
eq
push local 3
push constant 1
sub
push local 0
add
pop pointer 1
push that 0
push constant 0
eq
not
and
if-goto IF_TRUE2
goto IF_FALSE2
label IF_TRUE2
push constant 0
call Screen.setColor 1
pop temp 0
push local 3
push constant 1
sub
push local 0
add
pop pointer 1
push that 0
push static 0
push static 2
push static 0
sub
push this 3
call Math.divide 2
push local 3
push constant 1
sub
call Math.multiply 2
add
push constant 5
add
push static 1
push static 2
push static 0
sub
push this 3
call Math.divide 2
push local 2
call Math.multiply 2
add
push constant 5
add
push this 3
call DrawerNum.drawNum 4
pop temp 0
push local 3
push local 0
add
push local 3
push constant 1
sub
push local 0
add
pop pointer 1
push that 0
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 0
not
pop local 5
push local 3
push constant 1
sub
push local 0
add
push constant 0
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 0
not
call Screen.setColor 1
pop temp 0
push local 3
push local 0
add
pop pointer 1
push that 0
push static 0
push static 2
push static 0
sub
push this 3
call Math.divide 2
push local 3
call Math.multiply 2
add
push constant 5
add
push static 1
push static 2
push static 0
sub
push this 3
call Math.divide 2
push local 2
call Math.multiply 2
add
push constant 5
add
push this 3
call DrawerNum.drawNum 4
pop temp 0
label IF_FALSE2
push local 3
push constant 1
sub
pop local 3
goto WHILE_EXP2
label WHILE_END2
push this 3
push constant 1
sub
pop local 3
push local 2
push constant 1
add
pop local 2
goto WHILE_EXP1
label WHILE_END1
push local 4
push constant 1
sub
pop local 4
goto WHILE_EXP0
label WHILE_END0
push local 5
if-goto IF_TRUE3
goto IF_FALSE3
label IF_TRUE3
push pointer 0
call GameFiled.addRandomTile 1
pop temp 0
label IF_FALSE3
push constant 0
return
function GameFiled.moveLeft 6
push argument 0
pop pointer 0
push pointer 0
push this 1
push constant 0
not
call GameFiled.FillArrayOfArray 3
pop temp 0
push this 3
push constant 1
sub
pop local 4
label WHILE_EXP0
push local 4
push constant 0
gt
not
if-goto WHILE_END0
push constant 0
pop local 2
push constant 0
pop local 3
label WHILE_EXP1
push local 2
push this 3
lt
not
if-goto WHILE_END1
push local 2
push this 2
add
pop pointer 1
push that 0
pop local 0
push local 2
push this 1
add
pop pointer 1
push that 0
pop local 1
label WHILE_EXP2
push local 3
push this 3
push constant 1
sub
lt
not
if-goto WHILE_END2
push local 3
push local 0
add
pop pointer 1
push that 0
push local 3
push constant 1
add
push local 0
add
pop pointer 1
push that 0
eq
push local 3
push local 0
add
pop pointer 1
push that 0
push constant 0
eq
not
and
push local 3
push local 1
add
pop pointer 1
push that 0
and
push local 3
push constant 1
add
push local 1
add
pop pointer 1
push that 0
and
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push constant 0
call Screen.setColor 1
pop temp 0
push local 3
push local 0
add
pop pointer 1
push that 0
push static 0
push static 2
push static 0
sub
push this 3
call Math.divide 2
push local 3
call Math.multiply 2
add
push constant 5
add
push static 1
push static 2
push static 0
sub
push this 3
call Math.divide 2
push local 2
call Math.multiply 2
add
push constant 5
add
push this 3
call DrawerNum.drawNum 4
pop temp 0
push local 3
push constant 1
add
push local 0
add
pop pointer 1
push that 0
push static 0
push static 2
push static 0
sub
push this 3
call Math.divide 2
push local 3
push constant 1
add
call Math.multiply 2
add
push constant 5
add
push static 1
push static 2
push static 0
sub
push this 3
call Math.divide 2
push local 2
call Math.multiply 2
add
push constant 5
add
push this 3
call DrawerNum.drawNum 4
pop temp 0
push local 3
push local 0
add
push local 3
push local 0
add
pop pointer 1
push that 0
push local 3
push constant 1
add
push local 0
add
pop pointer 1
push that 0
add
pop temp 0
pop pointer 1
push temp 0
pop that 0
push local 3
push local 0
add
pop pointer 1
push that 0
push constant 2048
eq
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push constant 0
not
pop this 4
label IF_FALSE1
push local 3
push constant 1
add
push local 0
add
push constant 0
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 0
not
pop local 5
push local 3
push local 1
add
push constant 0
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 0
not
call Screen.setColor 1
pop temp 0
push local 3
push local 0
add
pop pointer 1
push that 0
push static 0
push static 2
push static 0
sub
push this 3
call Math.divide 2
push local 3
call Math.multiply 2
add
push constant 5
add
push static 1
push static 2
push static 0
sub
push this 3
call Math.divide 2
push local 2
call Math.multiply 2
add
push constant 5
add
push this 3
call DrawerNum.drawNum 4
pop temp 0
label IF_FALSE0
push local 3
push local 0
add
pop pointer 1
push that 0
push constant 0
eq
push local 3
push constant 1
add
push local 0
add
pop pointer 1
push that 0
push constant 0
eq
not
and
if-goto IF_TRUE2
goto IF_FALSE2
label IF_TRUE2
push constant 0
call Screen.setColor 1
pop temp 0
push local 3
push constant 1
add
push local 0
add
pop pointer 1
push that 0
push static 0
push static 2
push static 0
sub
push this 3
call Math.divide 2
push local 3
push constant 1
add
call Math.multiply 2
add
push constant 5
add
push static 1
push static 2
push static 0
sub
push this 3
call Math.divide 2
push local 2
call Math.multiply 2
add
push constant 5
add
push this 3
call DrawerNum.drawNum 4
pop temp 0
push local 3
push local 0
add
push local 3
push constant 1
add
push local 0
add
pop pointer 1
push that 0
pop temp 0
pop pointer 1
push temp 0
pop that 0
push local 3
push constant 1
add
push local 0
add
push constant 0
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 0
not
pop local 5
push constant 0
not
call Screen.setColor 1
pop temp 0
push local 3
push local 0
add
pop pointer 1
push that 0
push static 0
push static 2
push static 0
sub
push this 3
call Math.divide 2
push local 3
call Math.multiply 2
add
push constant 5
add
push static 1
push static 2
push static 0
sub
push this 3
call Math.divide 2
push local 2
call Math.multiply 2
add
push constant 5
add
push this 3
call DrawerNum.drawNum 4
pop temp 0
label IF_FALSE2
push local 3
push constant 1
add
pop local 3
goto WHILE_EXP2
label WHILE_END2
push constant 0
pop local 3
push local 2
push constant 1
add
pop local 2
goto WHILE_EXP1
label WHILE_END1
push local 4
push constant 1
sub
pop local 4
goto WHILE_EXP0
label WHILE_END0
push local 5
if-goto IF_TRUE3
goto IF_FALSE3
label IF_TRUE3
push pointer 0
call GameFiled.addRandomTile 1
pop temp 0
label IF_FALSE3
push constant 0
return
function GameFiled.moveUp 8
push argument 0
pop pointer 0
push pointer 0
push this 1
push constant 0
not
call GameFiled.FillArrayOfArray 3
pop temp 0
push this 3
push constant 1
sub
pop local 6
label WHILE_EXP0
push local 6
push constant 0
gt
not
if-goto WHILE_END0
push constant 0
pop local 4
push constant 0
pop local 5
label WHILE_EXP1
push local 5
push this 3
lt
not
if-goto WHILE_END1
label WHILE_EXP2
push local 4
push this 3
push constant 1
sub
lt
not
if-goto WHILE_END2
push local 4
push this 2
add
pop pointer 1
push that 0
pop local 0
push local 4
push constant 1
add
push this 2
add
pop pointer 1
push that 0
pop local 1
push local 4
push this 1
add
pop pointer 1
push that 0
pop local 2
push local 4
push constant 1
add
push this 1
add
pop pointer 1
push that 0
pop local 3
push local 5
push local 0
add
pop pointer 1
push that 0
push local 5
push local 1
add
pop pointer 1
push that 0
eq
push local 5
push local 0
add
pop pointer 1
push that 0
push constant 0
eq
not
and
push local 5
push local 2
add
pop pointer 1
push that 0
and
push local 5
push local 3
add
pop pointer 1
push that 0
and
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push constant 0
call Screen.setColor 1
pop temp 0
push local 5
push local 0
add
pop pointer 1
push that 0
push static 0
push static 2
push static 0
sub
push this 3
call Math.divide 2
push local 5
call Math.multiply 2
add
push constant 5
add
push static 1
push static 2
push static 0
sub
push this 3
call Math.divide 2
push local 4
call Math.multiply 2
add
push constant 5
add
push this 3
call DrawerNum.drawNum 4
pop temp 0
push local 5
push local 1
add
pop pointer 1
push that 0
push static 0
push static 2
push static 0
sub
push this 3
call Math.divide 2
push local 5
call Math.multiply 2
add
push constant 5
add
push static 1
push static 2
push static 0
sub
push this 3
call Math.divide 2
push local 4
push constant 1
add
call Math.multiply 2
add
push constant 5
add
push this 3
call DrawerNum.drawNum 4
pop temp 0
push local 5
push local 0
add
push local 5
push local 1
add
pop pointer 1
push that 0
push local 5
push local 0
add
pop pointer 1
push that 0
add
pop temp 0
pop pointer 1
push temp 0
pop that 0
push local 5
push local 1
add
push constant 0
pop temp 0
pop pointer 1
push temp 0
pop that 0
push local 5
push local 0
add
pop pointer 1
push that 0
push constant 2048
eq
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push constant 0
not
pop this 4
label IF_FALSE1
push constant 0
not
pop local 7
push local 5
push local 2
add
push constant 0
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 0
not
call Screen.setColor 1
pop temp 0
push local 5
push local 0
add
pop pointer 1
push that 0
push static 0
push static 2
push static 0
sub
push this 3
call Math.divide 2
push local 5
call Math.multiply 2
add
push constant 5
add
push static 1
push static 2
push static 0
sub
push this 3
call Math.divide 2
push local 4
call Math.multiply 2
add
push constant 5
add
push this 3
call DrawerNum.drawNum 4
pop temp 0
label IF_FALSE0
push local 5
push local 0
add
pop pointer 1
push that 0
push constant 0
eq
push local 5
push local 1
add
pop pointer 1
push that 0
push constant 0
eq
not
and
if-goto IF_TRUE2
goto IF_FALSE2
label IF_TRUE2
push constant 0
call Screen.setColor 1
pop temp 0
push local 5
push local 1
add
pop pointer 1
push that 0
push static 0
push static 2
push static 0
sub
push this 3
call Math.divide 2
push local 5
call Math.multiply 2
add
push constant 5
add
push static 1
push static 2
push static 0
sub
push this 3
call Math.divide 2
push local 4
push constant 1
add
call Math.multiply 2
add
push constant 5
add
push this 3
call DrawerNum.drawNum 4
pop temp 0
push local 5
push local 0
add
push local 5
push local 1
add
pop pointer 1
push that 0
pop temp 0
pop pointer 1
push temp 0
pop that 0
push local 5
push local 1
add
push constant 0
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 0
not
pop local 7
push constant 0
not
call Screen.setColor 1
pop temp 0
push local 5
push local 0
add
pop pointer 1
push that 0
push static 0
push static 2
push static 0
sub
push this 3
call Math.divide 2
push local 5
call Math.multiply 2
add
push constant 5
add
push static 1
push static 2
push static 0
sub
push this 3
call Math.divide 2
push local 4
call Math.multiply 2
add
push constant 5
add
push this 3
call DrawerNum.drawNum 4
pop temp 0
label IF_FALSE2
push local 4
push constant 1
add
pop local 4
goto WHILE_EXP2
label WHILE_END2
push constant 0
pop local 4
push local 5
push constant 1
add
pop local 5
goto WHILE_EXP1
label WHILE_END1
push local 6
push constant 1
sub
pop local 6
goto WHILE_EXP0
label WHILE_END0
push local 7
if-goto IF_TRUE3
goto IF_FALSE3
label IF_TRUE3
push pointer 0
call GameFiled.addRandomTile 1
pop temp 0
label IF_FALSE3
push constant 0
return
function GameFiled.moveDown 8
push argument 0
pop pointer 0
label WHILE_EXP0
push local 4
push this 3
lt
not
if-goto WHILE_END0
push local 4
push this 1
add
pop pointer 1
push that 0
pop local 2
label WHILE_EXP1
push local 5
push this 3
lt
not
if-goto WHILE_END1
push local 5
push local 2
add
push constant 0
not
pop temp 0
pop pointer 1
push temp 0
pop that 0
push local 5
push constant 1
add
pop local 5
goto WHILE_EXP1
label WHILE_END1
push constant 0
pop local 5
push local 4
push constant 1
add
pop local 4
goto WHILE_EXP0
label WHILE_END0
push this 3
push constant 1
sub
pop local 6
label WHILE_EXP2
push local 6
push constant 0
gt
not
if-goto WHILE_END2
push this 3
push constant 1
sub
pop local 4
push constant 0
pop local 5
label WHILE_EXP3
push local 5
push this 3
lt
not
if-goto WHILE_END3
label WHILE_EXP4
push local 4
push constant 0
gt
not
if-goto WHILE_END4
push local 4
push this 2
add
pop pointer 1
push that 0
pop local 0
push local 4
push constant 1
sub
push this 2
add
pop pointer 1
push that 0
pop local 1
push local 4
push this 1
add
pop pointer 1
push that 0
pop local 2
push local 4
push constant 1
sub
push this 1
add
pop pointer 1
push that 0
pop local 3
push local 5
push local 0
add
pop pointer 1
push that 0
push local 5
push local 1
add
pop pointer 1
push that 0
eq
push local 5
push local 0
add
pop pointer 1
push that 0
push constant 0
eq
not
and
push local 5
push local 2
add
pop pointer 1
push that 0
and
push local 5
push local 3
add
pop pointer 1
push that 0
and
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push constant 0
call Screen.setColor 1
pop temp 0
push local 5
push local 0
add
pop pointer 1
push that 0
push static 0
push static 2
push static 0
sub
push this 3
call Math.divide 2
push local 5
call Math.multiply 2
add
push constant 5
add
push static 1
push static 2
push static 0
sub
push this 3
call Math.divide 2
push local 4
call Math.multiply 2
add
push constant 5
add
push this 3
call DrawerNum.drawNum 4
pop temp 0
push local 5
push local 1
add
pop pointer 1
push that 0
push static 0
push static 2
push static 0
sub
push this 3
call Math.divide 2
push local 5
call Math.multiply 2
add
push constant 5
add
push static 1
push static 2
push static 0
sub
push this 3
call Math.divide 2
push local 4
push constant 1
sub
call Math.multiply 2
add
push constant 5
add
push this 3
call DrawerNum.drawNum 4
pop temp 0
push local 5
push local 0
add
push local 5
push local 1
add
pop pointer 1
push that 0
push local 5
push local 0
add
pop pointer 1
push that 0
add
pop temp 0
pop pointer 1
push temp 0
pop that 0
push local 5
push local 0
add
pop pointer 1
push that 0
push constant 2048
eq
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push constant 0
not
pop this 4
label IF_FALSE1
push local 5
push local 1
add
push constant 0
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 0
not
pop local 7
push local 5
push local 2
add
push constant 0
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 0
not
call Screen.setColor 1
pop temp 0
push local 5
push local 0
add
pop pointer 1
push that 0
push static 0
push static 2
push static 0
sub
push this 3
call Math.divide 2
push local 5
call Math.multiply 2
add
push constant 5
add
push static 1
push static 2
push static 0
sub
push this 3
call Math.divide 2
push local 4
call Math.multiply 2
add
push constant 5
add
push this 3
call DrawerNum.drawNum 4
pop temp 0
label IF_FALSE0
push local 5
push local 0
add
pop pointer 1
push that 0
push constant 0
eq
push local 5
push local 1
add
pop pointer 1
push that 0
push constant 0
eq
not
and
if-goto IF_TRUE2
goto IF_FALSE2
label IF_TRUE2
push constant 0
call Screen.setColor 1
pop temp 0
push local 5
push local 1
add
pop pointer 1
push that 0
push static 0
push static 2
push static 0
sub
push this 3
call Math.divide 2
push local 5
call Math.multiply 2
add
push constant 5
add
push static 1
push static 2
push static 0
sub
push this 3
call Math.divide 2
push local 4
push constant 1
sub
call Math.multiply 2
add
push constant 5
add
push this 3
call DrawerNum.drawNum 4
pop temp 0
push local 5
push local 0
add
push local 5
push local 1
add
pop pointer 1
push that 0
pop temp 0
pop pointer 1
push temp 0
pop that 0
push local 5
push local 1
add
push constant 0
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 0
not
pop local 7
push constant 0
not
call Screen.setColor 1
pop temp 0
push local 5
push local 0
add
pop pointer 1
push that 0
push static 0
push static 2
push static 0
sub
push this 3
call Math.divide 2
push local 5
call Math.multiply 2
add
push constant 5
add
push static 1
push static 2
push static 0
sub
push this 3
call Math.divide 2
push local 4
call Math.multiply 2
add
push constant 5
add
push this 3
call DrawerNum.drawNum 4
pop temp 0
label IF_FALSE2
push local 4
push constant 1
sub
pop local 4
goto WHILE_EXP4
label WHILE_END4
push this 3
push constant 1
sub
pop local 4
push local 5
push constant 1
add
pop local 5
goto WHILE_EXP3
label WHILE_END3
push local 6
push constant 1
sub
pop local 6
goto WHILE_EXP2
label WHILE_END2
push local 7
if-goto IF_TRUE3
goto IF_FALSE3
label IF_TRUE3
push pointer 0
call GameFiled.addRandomTile 1
pop temp 0
label IF_FALSE3
push constant 0
return
function GameFiled.addRandomTile 7
push argument 0
pop pointer 0
push constant 50
call Array.new 1
pop local 5
push constant 0
pop local 0
push constant 0
pop local 2
label WHILE_EXP0
push local 0
push this 3
lt
not
if-goto WHILE_END0
push local 0
push this 2
add
pop pointer 1
push that 0
pop local 6
push constant 0
pop local 1
label WHILE_EXP1
push local 1
push this 3
lt
not
if-goto WHILE_END1
push local 1
push local 6
add
pop pointer 1
push that 0
push constant 0
eq
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push local 4
push constant 1
add
pop local 4
push local 2
push local 5
add
push local 0
pop temp 0
pop pointer 1
push temp 0
pop that 0
push local 2
push constant 1
add
push local 5
add
push local 1
pop temp 0
pop pointer 1
push temp 0
pop that 0
push local 2
push constant 2
add
pop local 2
label IF_FALSE0
push local 1
push constant 1
add
pop local 1
goto WHILE_EXP1
label WHILE_END1
push local 0
push constant 1
add
pop local 0
goto WHILE_EXP0
label WHILE_END0
push local 2
push this 0
call Random.randomEven 2
pop local 2
push local 2
push local 5
add
pop pointer 1
push that 0
pop local 0
push local 2
push constant 1
add
push local 5
add
pop pointer 1
push that 0
pop local 1
push local 4
push this 0
call Random.randomTwoOrFour 2
pop local 3
push local 0
push this 2
add
pop pointer 1
push that 0
pop local 6
push local 1
push local 6
add
push local 3
pop temp 0
pop pointer 1
push temp 0
pop that 0
push pointer 0
push local 3
call GameFiled.setScore 2
pop temp 0
push local 3
push static 0
push static 2
push static 0
sub
push this 3
call Math.divide 2
push local 1
call Math.multiply 2
add
push constant 5
add
push static 1
push static 2
push static 0
sub
push this 3
call Math.divide 2
push local 0
call Math.multiply 2
add
push constant 5
add
push this 3
call DrawerNum.drawNum 4
pop temp 0
push local 5
call Array.dispose 1
pop temp 0
push constant 0
return
function GameFiled.isGameOver 4
push argument 0
pop pointer 0
push constant 0
pop local 0
push constant 0
pop local 1
label WHILE_EXP0
push local 0
push this 3
lt
not
if-goto WHILE_END0
push local 0
push this 2
add
pop pointer 1
push that 0
pop local 2
label WHILE_EXP1
push local 1
push this 3
lt
not
if-goto WHILE_END1
push local 1
push local 2
add
pop pointer 1
push that 0
push constant 0
eq
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push constant 0
return
label IF_FALSE0
push local 1
push constant 1
add
pop local 1
goto WHILE_EXP1
label WHILE_END1
push local 0
push constant 1
add
pop local 0
push constant 0
pop local 1
goto WHILE_EXP0
label WHILE_END0
label WHILE_EXP2
push local 0
push this 3
lt
not
if-goto WHILE_END2
push local 0
push this 2
add
pop pointer 1
push that 0
pop local 2
label WHILE_EXP3
push local 1
push this 3
lt
not
if-goto WHILE_END3
push local 1
push local 2
add
pop pointer 1
push that 0
push constant 0
eq
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push constant 0
return
label IF_FALSE1
push local 1
push constant 1
add
pop local 1
goto WHILE_EXP3
label WHILE_END3
push local 0
push constant 1
add
pop local 0
push constant 0
pop local 1
goto WHILE_EXP2
label WHILE_END2
push constant 0
pop local 0
push constant 0
pop local 1
label WHILE_EXP4
push local 0
push this 3
lt
not
if-goto WHILE_END4
push local 0
push this 2
add
pop pointer 1
push that 0
pop local 2
label WHILE_EXP5
push local 1
push this 3
push constant 1
sub
lt
not
if-goto WHILE_END5
push local 1
push local 2
add
pop pointer 1
push that 0
push local 1
push constant 1
add
push local 2
add
pop pointer 1
push that 0
eq
if-goto IF_TRUE2
goto IF_FALSE2
label IF_TRUE2
push constant 0
return
label IF_FALSE2
push local 1
push constant 1
add
pop local 1
goto WHILE_EXP5
label WHILE_END5
push local 0
push constant 1
add
pop local 0
push constant 0
pop local 1
goto WHILE_EXP4
label WHILE_END4
push constant 0
pop local 0
push constant 0
pop local 1
label WHILE_EXP6
push local 1
push this 3
lt
not
if-goto WHILE_END6
label WHILE_EXP7
push local 0
push this 3
push constant 1
sub
lt
not
if-goto WHILE_END7
push local 0
push this 2
add
pop pointer 1
push that 0
pop local 2
push local 0
push constant 1
add
push this 2
add
pop pointer 1
push that 0
pop local 3
push local 1
push local 2
add
pop pointer 1
push that 0
push local 1
push local 3
add
pop pointer 1
push that 0
eq
if-goto IF_TRUE3
goto IF_FALSE3
label IF_TRUE3
push constant 0
return
label IF_FALSE3
push local 0
push constant 1
add
pop local 0
goto WHILE_EXP7
label WHILE_END7
push constant 0
pop local 0
push local 1
push constant 1
add
pop local 1
goto WHILE_EXP6
label WHILE_END6
push constant 0
not
return
